{"version":3,"file":"static/js/431.4cae6d01.chunk.js","mappings":"+SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,qGACDD,EAAAA,EAAAA,GAAM,qBAAsB,CACjDE,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAMjBA,EAASC,KAAKC,SANG,2CAAH,qDASVC,EAAY,mCAAG,WAAMC,GAAN,wFACHR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,mBAA+B,CACzDN,OAAQ,CACNC,QAAS,sCAHa,cACpBC,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDAQZI,EAAe,mCAAG,WAAMD,GAAN,wFACNR,EAAAA,EAAAA,GAAM,sCAAD,OACYQ,EADZ,qEADC,cACvBJ,EADuB,yBAKtBA,EAASC,KAAKK,MALQ,2CAAH,sDAQfC,EAAe,mCAAG,WAAMH,GAAN,wFACNR,EAAAA,EAAAA,GAAM,SAAD,OACjBQ,EADiB,4EADC,cACvBJ,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfM,EAAW,mCAAG,WAAMC,GAAN,wFACFb,EAAAA,EAAAA,GAAM,+EAAD,OACqDa,IAFxD,cACnBT,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qD,yGCUxB,UAzCiB,WACf,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEOX,EAAAA,EAAAA,IAAgBK,GAFvB,OAEVV,EAFU,OAGhBc,EAAYd,GAHI,sDAKV,IAAIiB,MAAM,SALA,yDAAH,qDAQjBD,GACD,GAAE,CAACN,KAEF,iCACIG,EAASK,OAAS,IAAK,wJACzB,eAAIC,UAAU,YAAd,SACGN,EAASO,KAAI,YAAiC,IAA9BhB,EAA6B,EAA7BA,GAAIiB,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACzB,OACE,gBAAIH,UAAU,YAAd,UACGG,GACC,gBACEH,UAAU,YACVI,IAAG,yCAAoCD,GACvCE,IAAI,MAGN,cAAGL,UAAU,SAAb,4GAGF,cAAGA,UAAU,aAAb,SAA2BE,MAXEjB,EAclC,QAIR,C","sources":["Api/Api.jsx","components/CastList/CastList.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getPopular = async () => {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: 'abb72529df670ecb15c1bc6e9ed76f7b',\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios(`movie/${id}&language=en-US`, {\n    params: {\n      api_key: 'abb72529df670ecb15c1bc6e9ed76f7b',\n    },\n  });\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=abb72529df670ecb15c1bc6e9ed76f7b&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios(\n    `movie/${id}/reviews?api_key=abb72529df670ecb15c1bc6e9ed76f7b&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios(\n    `/search/movie?api_key=abb72529df670ecb15c1bc6e9ed76f7b&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};\n","import { getMovieCredits } from 'Api/Api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst CastList = () => {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n\n  useEffect(() => {\n    const getCastList = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCastList(response);\n      } catch (error) {\n        throw new Error('error');\n      }\n    };\n    getCastList();\n  }, [movieId]);\n  return (\n    <>\n      {!castList.length > 0 && <p> нажаль нічого показати</p>}\n      <ul className=\"list_cast\">\n        {castList.map(({ id, name, profile_path }) => {\n          return (\n            <li className=\"list_item\" key={id}>\n              {profile_path ? (\n                <img\n                  className=\"img_actor\"\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt=\"\"\n                />\n              ) : (\n                <p className=\"no_img\">тут мало бути фото</p>\n              )}\n\n              <p className=\"name_actor\">{name}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CastList;\n"],"names":["axios","getPopular","params","api_key","response","data","results","getMovieById","id","getMovieCredits","cast","getMovieReviews","searchMovie","query","movieId","useParams","useState","castList","setCastList","useEffect","getCastList","Error","length","className","map","name","profile_path","src","alt"],"sourceRoot":""}