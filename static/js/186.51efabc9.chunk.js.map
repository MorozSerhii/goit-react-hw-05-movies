{"version":3,"file":"static/js/186.51efabc9.chunk.js","mappings":"+SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,qGACDD,EAAAA,EAAAA,GAAM,qBAAsB,CACjDE,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAMjBA,EAASC,KAAKC,SANG,2CAAH,qDASVC,EAAY,mCAAG,WAAMC,GAAN,wFACHR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,mBAA+B,CACzDN,OAAQ,CACNC,QAAS,sCAHa,cACpBC,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDAQZI,EAAe,mCAAG,WAAMD,GAAN,wFACNR,EAAAA,EAAAA,GAAM,sCAAD,OACYQ,EADZ,qEADC,cACvBJ,EADuB,yBAKtBA,EAASC,KAAKK,MALQ,2CAAH,sDAQfC,EAAe,mCAAG,WAAMH,GAAN,wFACNR,EAAAA,EAAAA,GAAM,SAAD,OACjBQ,EADiB,4EADC,cACvBJ,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfM,EAAW,mCAAG,WAAMC,GAAN,wFACFb,EAAAA,EAAAA,GAAM,+EAAD,OACqDa,IAFxD,cACnBT,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qD,yGCJxB,UA3BgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEQT,EAAAA,EAAAA,IAAgBG,GAFxB,OAETV,EAFS,OAGfc,EAAed,GAHA,uGAAH,qDAMhBgB,GACD,GAAE,CAACN,KAEF,4BACIG,EAAYI,OAAS,IAAK,gIAC5B,wBACGJ,EAAYK,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,gBAAIC,UAAU,gBAAd,WACE,cAAGA,UAAU,cAAb,SAA4BF,KAC5B,cAAGE,UAAU,cAAb,SAA4BD,MAFKhB,EADpB,QASxB,C","sources":["Api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getPopular = async () => {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: 'abb72529df670ecb15c1bc6e9ed76f7b',\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios(`movie/${id}&language=en-US`, {\n    params: {\n      api_key: 'abb72529df670ecb15c1bc6e9ed76f7b',\n    },\n  });\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=abb72529df670ecb15c1bc6e9ed76f7b&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios(\n    `movie/${id}/reviews?api_key=abb72529df670ecb15c1bc6e9ed76f7b&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios(\n    `/search/movie?api_key=abb72529df670ecb15c1bc6e9ed76f7b&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};\n","import { getMovieReviews } from 'Api/Api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReview, setmovieReview] = useState([]);\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setmovieReview(response);\n      } catch (error) {}\n    };\n    getReviews();\n  }, [movieId]);\n  return (\n    <div>\n      {!movieReview.length > 0 && <p>Відгуків ще не було</p>}\n      <ul>\n        {movieReview.map(({ id, author, content }) => (\n          <li className=\"list_item-rew\" key={id}>\n            <p className=\"author_name\">{author}</p>\n            <p className=\"rew_content\">{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","getPopular","params","api_key","response","data","results","getMovieById","id","getMovieCredits","cast","getMovieReviews","searchMovie","query","movieId","useParams","useState","movieReview","setmovieReview","useEffect","getReviews","length","map","author","content","className"],"sourceRoot":""}